<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        c1mz3MBIcVUOLRgAGwYABgMABQIACAAACgAADwAAFAAAGwAAHgACLAAALgAALgAEOwIXURcSTBIGQQcI
        SA0GUwAbaBQyfS9Ci0JTm1Vjq2VmrGVfpV5MlUUzfCwibBoWYA4jax4jaiFVm1RYl1lXeVsEJggAGQAA
        EQAAHwAADQAACQAADQIABwAABQAAHwo9Ykiiy682X0MAGwYACgAAGQUCHgoIKQ4RNREYQBYhUR0vYig1
        bi9Fgz1GiEFKjkdOkktPmFBXnltgqGZnr22Hw32JxX+Ox4iXz5Sd152f2Z+c1puY0peV0o6KyYGBwneB
        wneCwXuFw4GRz42g26GqxKZIYkQLMAoKLwkCIwALIwUaJhQOGggVIQ0OHAQqRyBmiV3T+sx0m208WDQN
        KQUBHQkDHwsEJQoHKwcKMggRQQ0eURclXh89ezVAgjtIjEVRlU5Wn1dgp2Rrs3Fzu3mGwnyHw32MxYaS
        yo+Vz5WTzZOMxouFv4R4tXFxsGhvsGV5um+DwnyOzIqe3Jqv6rCyzK5QakwGKwUAJQAAIQAEHAAMGAYH
        EwELFwMKGAAfPBVUd0u33rBUe00fOxcBHQAAFwAAGgAAIgAAKAAAMwAAQAAIUgYSXg0neCMvgCs3jTVB
        lz9Gn0lOp1FYsVtetmN7sG18rnR/sHiDs3+EtYOAsX91qXNto2hWkE9QjEZQj0dgn1dwr2mBv32V05Gm
        4aehuqBMZUsAGQAADQAAEAAADgABCwAFDwMBDAAFEwASLwhHaj6nzqBDajwMJwUAFgAQRxgcUyQuajRB
        fkRQklFfol1ps2dyvm14yXR/0HuC2ICH3YWG34mI4YuL5I6O5pOm25im2J6n2KCq2qaq26mm16Wc0JqV
        y5CLxYR/u3V3tm5/vnaKyYOW1JKn5aO28bfW79WctZs9X0EIKgwJJw4TJxQWIBQbJRkPGgoWJAwhPhdn
        il7X/tCCqXtDXjwwSykAMgIVRxc0aTdTilNoomh2sXR7u3p/wHt6v3Z/xHuAyn6Ayn58yHp6xnh6xnh7
        x3mTzIiSyYqSyIyVypGUy5SQx5CGwoZ/vHxoqmJanlFPmUdXoU9lsWB0vnKH0YWW3Zq74b2kyqZMe1UA
        KgQAEwAAFwAAEQIAEAEHHQoJIgYKNQpUglfD9Mh8rYE0VzwQMxgAJwAKPAwmWylCeUJQilBWkVRVlVRV
        llFQlUxVmlFVn1NWoFRUoFJUoFJWolRZpVdfmFRjmltqoGRzqG92rXZzqnNopGhgnV0+gDgwdCcmcB4w
        eig+ijlKlEhXoVVjqmeQtpKTuZVWhV8JOBIAGwAAIgoIHQ4BFgcMIg8LJAgBLAE4ZjuMvZFXiFwfQicA
        GwAAEQACHAAPLAsaNxYcPBkcPBkaPBcaPhQZQBMdRRUdSxcgThoiURkmVR0qXCIwYihMjERZmVFxsGuK
        x4eX2ZiZ25qP1Y+GzYR4xnNot2BXrFBVqk5RqE5InUg/lUE9kkJQkERiolZVm04/hDtFhURel2Bym25v
        mGtijFxdiVQ8eTU/gDtSlVIhYiQDOQoAHgAAGgADHQACHwAAHAAAGQAAFgAAGAAAHAAAHQAAIgAAKAAA
        KwAALgAFNAAMPgQTRQsAPgAVVQ08ezZlomJ+wH+HyYh/xX91vHNjsV5ToktDmDw/lDg0izEfdB8JXwsA
        VAQVVQkfXxMjaRwnbCMvby46czxEbUA7ZDdHcUFIdD8oZSETVA8ISwgALAAALgAAKwAAAwIAAwIAAwIA
        AwIAAwEAAwEABAAABAAABQAABAAABAAABAAABAAABwADCwAGDgMADgAADgAAHwA5ajZkoWFapVdTp09G
        mkI6jjYkeCAYYxUYVRULPAgAHAAAEQACFgAACwAACgAACAAABwAABgAABwAACAAACQAACAAABwAABgAA
        BQAABQAABQAABQAABQAAAwIAAwIAAwIAAwIAAwEAAwEABAAABAAABAAABQAACAAFDQMNFQsWHhQeJhsj
        KyAoPiYiPx4nTCZdjlqMyYmT3pCU6JCI3IR5zXVkuGBXolRTkFBAcT0kSSMUMxIdMRocKh4ZJxsVIxcR
        HxMNGw8LGQ0JFwsJFwsJFwsIFgoHFQkGFAgEEgYCEAQBDwMADgIAAwIAAwIAAwIAAwIAAwEAAwEABAAA
        BAAABwAABgAACAACCgAGDgQNFQsTGxAXHxQdMxoVNhMVOxE2ZzNjoV96xHiA035xxG9Yq1ZFmEM4gzU2
        czMpWyUWOxMMLAkTLBINGA4LFgwJFAoHEggGEQcGEQcGEQcHEggGEQcGEQcFEAYEDwUCDQMBDAIACwEA
        CgAAAwIAAwIAAwIAAwIAAwEAAwEABAAABAADCgMBCAEABgAABAAABAAABgABCQADCwAAEAAAFgAAGAAA
        MQApZyVPmU1Yq1ZIm0Y1iDMcbxoIUwUAPAAAKQAAFQAAEQAAFAAABQAABAAABAAABAAABAAABAAABQAA
        BwAABgAABQAABQAABAAABAAABAAABAAABAAAAwIAAwIAAwIAAwIAAwEAAwEABAAABAACCQIBCAEACAAB
        CQAFDQMKEggPFwwSGg8VLhQWOhYZQRcdURxFgUR3wHiH14R+znt3x3Rbq1g6gzsmYiUWShUONgwLLwsU
        LRMOGQ8LFgwHEggDDgQACwEACQAACAAACAAACAAACAAACAAABwAABwAABgAABgAABgAAAwIAAwIAAwIA
        AwIAAwEAAwEABAAABAABCAEABwAACAACCgAGDgQMFAoSGg8WHhMULRMUOBQaQhgTRxIxbTBkrWV3x3R3
        x3RouGVQoE0zfDQhXSAWShUROQ8MMAwQKQ8GEQcFEAYCDQMACgAACAAABwAABwAACAAACAAACAAACAAA
        CAAACAAACAAACAAACAAAAwIAAwIAAwIAAwIAAwEAAwEABAAABAAABwAABgAABQAABAAABQAACAAEDAEH
        DwQACwAAEQAAGgAAEwAALwAqaihBiD9OlUw1fDMeZRwBRAEAJwAAGgAAEwAAEgAACgAAAwAAAwAAAwAA
        AwAAAwAAAwAAAwAAAwAAAwAAAwAAAwAAAwAAAwAAAwAAAwAABAAAAwIAAwIAAwIAAwIAAwEAAwEABAAA
        BAAABgAABQAABAAABAAABQABCQAFDQIIEAUPLBIPMw8WPRcGNAUWUBZNjUtrsmmEy4J4v3ZZoFcvci8S
        SRAFNQUKLwkJMAoPKRELEwwJEQoFDQYCCgMABwAABQAABQAABQAABgAABgAABwAABwAABwAACAEACAEA
        CAEAAwIAAwIAAwIAAwIAAwEAAwEABAAABAAABwAABgAABwAACAACCgAFDQMHDwQJEQYKIQsAHQMAIAAF
        LAYVQxQxZTBalFl/uX55s3hGgEUZTRcMOgwMNAsFJQYAHwIMIA0ABgEABgEABQAABAAABAAAAwAAAgAA
        AgAABAAABAAABAAABAAABAAABAAABAAABAAAAwIAAwIAAwIAAwIAAwEAAwEABAAABAAAAwAAAwAABAAA
        BAAABAAABQAABwABCQACGQMAHAIAGwAAEQAAEwAAHgAfWR5Vj1RAej8QSg8AHQAAEwAAFwAAEwAAEwAB
        FQIABgEABgEABQAABAAABAAAAwAAAgAAAgAABAAABAAABAAABAAABAAABAAABAAABAAAAwIAAwIAAwIA
        AwIAAwEAAwEABAAABAAABQAABQAABQAABgAABwABCQAEDAEFDQIFFAYLHg8SJxEFIAYAFwAJLghHb0WE
        rIJ4oHZDa0EPNA4AHQAAGgACFwEBFAMIFgoCBQMCBQMBBAIAAwEAAwEAAgAAAQAAAQAAAwEAAwEAAwEA
        AwEAAwEAAwEAAwEAAwEAAwIAAwIAAwIAAwIAAwEAAwEABAAABAACCQIBCAEACAAACAABCQADCwEFDQIH
        DwQDEgQEFwgKHwkHIggDIgENMgwxWS9Xf1Vbg1kwWC4ILQcAHQADHgQGGwUAEwIBDwMCBQMCBQMBBAIA
        AwEAAwEAAgAAAQAAAQAAAwEAAwEAAwEAAwEAAwEAAwEAAwEAAwEAAwIAAwIAAwIAAwIAAwEAAwEABAAA
        BAAAAwAAAwAABAAABAAABAAABAAABAAABQAABwIAAwAABAAABwAACAAACQAAFgARKAwPJgoAEQAACgAA
        BwABEAIFDgQABAAAAQAEBAQEBAQDAwMCAgICAgIBAQEAAAAAAAACAgICAgICAgICAgICAgICAgICAgIC
        AgIAAwIAAwIAAwIAAwIAAwEAAwEABAAABAAABQAABAAABAAABAAABAAABAAABQAABgAABwIABgEACwEC
        DwEADgAAEAANJAghOBwcMxcMIwcAEQAADAABEAIHEAYBDAQABQMEBAQEBAQDAwMCAgICAgIBAQEAAAAA
        AAACAgICAgICAgICAgICAgICAgICAgICAgIAAwIAAwIAAwIAAwIAAwEAAwEABAAABAADCgMCCQIBCQAA
        BwAABwAACAABCQACCgAFBwcEBgYFCggIDwgEDgIEDwAQHgwjMR8kMiAXJRMIEwMABwAABQAECQcMDg4O
        EBAEBAQEBAQDAwMCAgICAgIBAQEAAAAAAAACAgICAgICAgICAgICAgICAgICAgICAgIAAwIAAwIAAwIA
        AwIAAwEAAwEABAAABAAAAwAAAwAABAAABAAABAAABAAABAAABAAAAQEAAAAAAQAAAwAABQAABgAABwAA
        CAAABwAABwAABgAABQAAAwAAAQAAAAAAAAAEBAQEBAQDAwMCAgICAgIBAQEAAAAAAAACAgICAgICAgIC
        AgICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>